# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.



#  * * * * * * * * * * * * * * * * * * * * * * * * 
#  * * * * * * * * * * * * * * * * * * * * * * * * 
# Instructions: Replace variables indicated by "Template" with modifier specific variable names. NB Do
# not choose a name that conflicts with a generic function. If the modifier is Two Words, it will be
# represented in the script as 'Two Words' and two_words automatically, a good way to go.

# Template replacements:
#   Need two review & substitute two variables for all files
#       'Node Name'         (this is what you called the geometry node)
#        node_name          (lowercase function name for all Operators generated by NodeToPython script)

# Also there are some labels that benefit from better string descriptions

# ALL locations where a substitution needs to be made is marked with Template, so a Find Template will identify
#  * * * * * * * * * * * * * * * * * * * * * * * * 
#  * * * * * * * * * * * * * * * * * * * * * * * * 


bl_info = {
    "name" : "Node Name",        #Template: replace with Node Name - this will be addon name
    "author" : "powersprouter",
    "description" : "modifies mesh object with node group",
    "blender" : (3, 6, 0),
    "version" : (0, 0, 1),
    "location" : "View3D",
    "warning" : "",
    "category" : "Object"
}
import bpy
from . nbt_ops import nbt_OT_Apply_node_name_Operator, nbt_OT_Undo_node_name_Operator, nbt_OT_Create_node_name_Geonode_Operator #Template - replace node_name in Operator names with node_name (lowercase)
from . nbt_panel import nbt_PT_Panel


classes = (nbt_OT_Apply_node_name_Operator, nbt_OT_Undo_node_name_Operator, nbt_PT_Panel, nbt_OT_Create_node_name_Geonode_Operator)  #Template - replace node_name in Operator names with node_name (lowercase)

def register():
    for c in classes:
        bpy.utils.register_class(c)

def unregister():
    for c in classes:
        bpy.utils.unregister_class(c)
